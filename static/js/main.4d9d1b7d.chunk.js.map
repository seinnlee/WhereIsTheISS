{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","date","Date","lat","lon","this","timer","setInterval","fetch","then","response","json","data","setState","clearInterval","className","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRA0CeA,E,kDArCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,IAAIC,KACVC,IAAK,EACLC,IAAK,GALU,E,qDASnB,WAAqB,IAAD,OAClBC,KAAKC,MAAQC,aAAY,WACvBC,MAAM,2CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,EAAKC,SAAS,CAAEV,IAAKS,EAAI,aAAJ,WACrB,EAAKC,SAAS,CAAET,IAAKQ,EAAI,aAAJ,iBAExB,O,gCAGL,WACEE,cAAcT,KAAKC,S,oBAGrB,WACE,MAAqBD,KAAKL,MAAlBG,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IACb,OACE,sBAAKW,UAAU,KAAf,UACE,uDACE,2CAAcZ,KACd,4CAAeC,Y,GA/BPY,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4d9d1b7d.chunk.js","sourcesContent":["import React from 'react';\nimport Map from './Map';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      lat: 0,\n      lon: 0\n    }\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      fetch('http://api.open-notify.org/iss-now.json')\n        .then(response => response.json())\n        .then(data => {\n          this.setState({ lat: data['iss_position']['latitude'] });\n          this.setState({ lon: data['iss_position']['longitude'] });\n        })\n    }, 1000)\n  }\n\n  componentWillMount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { lat, lon } = this.state;\n    return (\n      <div className='tc'>\n        <h1>Where is the ISS Now?</h1>\n          <p>latitude: {lat}</p>\n          <p>longitude: {lon}</p>\n        {/* <Map location={this.state} /> */}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}